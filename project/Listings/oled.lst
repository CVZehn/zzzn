C51 COMPILER V9.53.0.0   OLED                                                              04/16/2019 20:52:14 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE scr\oled.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\inc) DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\oled.lst) OBJECT(.\Objects\oled.obj)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////       
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //中景园电子
   4          //店铺地址：http://shop73023976.taobao.com/?spm=2013.1.0.0.M4PqC2
   5          //
   6          //  文 件 名   : main.c
   7          //  版 本 号   : v2.0
   8          //  作    者   : HuangKai
   9          //  生成日期   : 2014-0101
  10          //  最近修改   : 
  11          //  功能描述   : OLED 4接口演示例程(51系列)
  12          //              说明: 
  13          //              ----------------------------------------------------------------
  14          //              GND    电源地
  15          //              VCC  接5V或3.3v电源
  16          //              D0   P1^0（SCL）
  17          //              D1   P1^1（SDA）
  18          //              RES  接P12
  19          //              DC   接P13
  20          //              CS   接P14               
  21          //              ----------------------------------------------------------------
  22          // 修改历史   :
  23          // 日    期   : 
  24          // 作    者   : HuangKai
  25          // 修改内容   : 创建文件
  26          //版权所有，盗版必究。
  27          //Copyright(C) 中景园电子2014/3/16
  28          //All rights reserved
  29          //******************************************************************************/。
  30          #include "oled.h"
  31          #include "oledfont.h"    
  32          void delay_ms(unsigned int ms)
  33          {                         
  34   1              unsigned int a;
  35   1              while(ms)
  36   1              {
  37   2                      a=1800;
  38   2                      while(a--);
  39   2                      ms--;
  40   2              }
  41   1              return;
  42   1      }
  43          /**********************************************
  44          //IIC Start
  45          **********************************************/
  46          void IIC_Start_OLED()
  47          {
  48   1              
  49   1              OLED_SCLK_Set() ;
  50   1              OLED_SDIN_Set();
  51   1              OLED_SDIN_Clr();
  52   1              OLED_SCLK_Clr();
  53   1      
  54   1      }
C51 COMPILER V9.53.0.0   OLED                                                              04/16/2019 20:52:14 PAGE 2   

  55          
  56          /**********************************************
  57          //IIC Stop
  58          **********************************************/
  59          void IIC_Stop_OLED()
  60          {
  61   1      OLED_SCLK_Set() ;
  62   1      //      OLED_SCLK_Clr();
  63   1              OLED_SDIN_Clr();
  64   1              OLED_SDIN_Set();
  65   1              
  66   1      }
  67          
  68          void IIC_Wait_Ack_OLED()
  69          {
  70   1      
  71   1              OLED_SCLK_Set() ;
  72   1              OLED_SCLK_Clr();
  73   1      }
  74          /**********************************************
  75          // IIC Write byte
  76          **********************************************/
  77          
  78          void Write_IIC_Byte(unsigned char IIC_Byte)
  79          {
  80   1              unsigned char i;
  81   1              unsigned char m,da;
  82   1              da=IIC_Byte;
  83   1              OLED_SCLK_Clr();
  84   1              for(i=0;i<8;i++)                
  85   1              {
  86   2                              m=da;
  87   2                      //      OLED_SCLK_Clr();
  88   2                      m=m&0x80;
  89   2                      if(m==0x80)
  90   2                      {OLED_SDIN_Set();}
  91   2                      else OLED_SDIN_Clr();
  92   2                              da=da<<1;
  93   2                      OLED_SCLK_Set();
  94   2                      OLED_SCLK_Clr();
  95   2                      }
  96   1      
  97   1      
  98   1      }
  99          /**********************************************
 100          // IIC Write Command
 101          **********************************************/
 102          void Write_IIC_Command(unsigned char IIC_Command)
 103          {
 104   1         IIC_Start_OLED();
 105   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
 106   1              IIC_Wait_Ack_OLED();    
 107   1         Write_IIC_Byte(0x00);                        //write command
 108   1              IIC_Wait_Ack_OLED();    
 109   1         Write_IIC_Byte(IIC_Command); 
 110   1              IIC_Wait_Ack_OLED();    
 111   1         IIC_Stop_OLED();
 112   1      }
 113          /**********************************************
 114          // IIC Write Data
 115          **********************************************/
 116          void Write_IIC_Data(unsigned char IIC_Data)
C51 COMPILER V9.53.0.0   OLED                                                              04/16/2019 20:52:14 PAGE 3   

 117          {
 118   1         IIC_Start_OLED();
 119   1         Write_IIC_Byte(0x78);                        //D/C#=0; R/W#=0
 120   1              IIC_Wait_Ack_OLED();    
 121   1         Write_IIC_Byte(0x40);                        //write data
 122   1              IIC_Wait_Ack_OLED();    
 123   1         Write_IIC_Byte(IIC_Data);
 124   1              IIC_Wait_Ack_OLED();    
 125   1         IIC_Stop_OLED();
 126   1      }
 127          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 128          {
 129   1              if(cmd)
 130   1                              {
 131   2      
 132   2         Write_IIC_Data(dat);
 133   2         
 134   2                      }
 135   1              else {
 136   2         Write_IIC_Command(dat);
 137   2                      
 138   2              }
 139   1      
 140   1      
 141   1      }
 142          
 143          
 144          //坐标设置
 145          
 146                  void OLED_Set_Pos(unsigned char x, unsigned char y) 
 147          {       OLED_WR_Byte(0xb0+y,OLED_CMD);
 148   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 149   1              OLED_WR_Byte((x&0x0f),OLED_CMD); 
 150   1      }         
 151          //开启OLED显示    
 152          void OLED_Display_On(void)
 153          {
 154   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 155   1              OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 156   1              OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 157   1      }
 158          void OLED_Clear(void)  
 159          {  
 160   1              u8 i,n;             
 161   1              for(i=0;i<8;i++)  
 162   1              {  
 163   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 164   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 165   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 166   2                      for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 167   2              } //更新显示
 168   1      }
 169          //在指定位置显示一个字符,包括部分字符
 170          //x:0~127
 171          //y:0~63
 172          //mode:0,反白显示;1,正常显示                             
 173          //size:选择字体 16/12 
 174          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 175          {       
 176   1              unsigned char c=0,i=0;  
 177   1              c=chr-32;//得到偏移后的值                       
 178   1                      if(x>Max_Column-1){x=0;y=y+2;}
C51 COMPILER V9.53.0.0   OLED                                                              04/16/2019 20:52:14 PAGE 4   

 179   1                      if(Char_Size ==16)
 180   1                              {
 181   2                              OLED_Set_Pos(x,y);      
 182   2                              for(i=0;i<8;i++)
 183   2                              OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 184   2                              OLED_Set_Pos(x,y+1);
 185   2                              for(i=0;i<8;i++)
 186   2                              OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 187   2                              }
 188   1                              else {  
 189   2                                      OLED_Set_Pos(x,y);
 190   2                                      for(i=0;i<6;i++)
 191   2                                      OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 192   2                                      
 193   2                              }
 194   1      }
 195          //m^n函数
 196          u32 oled_pow(u8 m,u8 n)
 197          {
 198   1              u32 result=1;    
 199   1              while(n--)result*=m;    
 200   1              return result;
 201   1      }                                 
 202          //显示2个数字
 203          //x,y :起点坐标  
 204          //len :数字的位数
 205          //size:字体大小
 206          //mode:模式     0,填充模式;1,叠加模式
 207          //num:数值(0~4294967295);                         
 208          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 209          {               
 210   1              u8 t,temp;
 211   1              u8 enshow=0;                                               
 212   1              for(t=0;t<len;t++)
 213   1              {
 214   2                      temp=(num/oled_pow(10,len-t-1))%10;
 215   2                      if(enshow==0&&t<(len-1))
 216   2                      {
 217   3                              if(temp==0)
 218   3                              {
 219   4                                      OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 220   4                                      continue;
 221   4                              }else enshow=1; 
 222   3                               
 223   3                      }
 224   2                      OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 225   2              }
 226   1      } 
 227          //显示一个字符号串
 228          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 229          {
 230   1              unsigned char j=0;
 231   1              while (chr[j]!='\0')
 232   1              {               OLED_ShowChar(x,y,chr[j],Char_Size);
 233   2                              x+=8;
 234   2                      if(x>120){x=0;y+=2;}
 235   2                              j++;
 236   2              }
 237   1      }
 238          //显示汉字
 239          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 240          {                           
C51 COMPILER V9.53.0.0   OLED                                                              04/16/2019 20:52:14 PAGE 5   

 241   1              u8 t,adder=0;
 242   1              OLED_Set_Pos(x,y);      
 243   1          for(t=0;t<16;t++)
 244   1                      {
 245   2                                      OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 246   2                                      adder+=1;
 247   2           }  
 248   1                      OLED_Set_Pos(x,y+1);    
 249   1          for(t=0;t<16;t++)
 250   1                              {       
 251   2                                      OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 252   2                                      adder+=1;
 253   2            }                                 
 254   1      }
 255          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 256          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 257          {       
 258   1       unsigned int j=0;
 259   1       unsigned char x,y;
 260   1        
 261   1        if(y1%8==0) y=y1/8;      
 262   1        else y=y1/8+1;
 263   1              for(y=y0;y<y1;y++)
 264   1              {
 265   2                      OLED_Set_Pos(x0,y);
 266   2          for(x=x0;x<x1;x++)
 267   2                  {      
 268   3                      OLED_WR_Byte(BMP[j++],OLED_DATA);               
 269   3                  }
 270   2              }
 271   1      } 
 272          
 273          //初始化SSD1306                                     
 274          void OLED_Init(void)
 275          {       
 276   1       
 277   1          OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 278   1              OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 279   1              OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 280   1              OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 281   1              OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 282   1              OLED_WR_Byte(0x81,OLED_CMD); // contract control
 283   1              OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 284   1              OLED_WR_Byte(0xA0,OLED_CMD);//set segment remap 
 285   1              OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 286   1              OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 287   1              OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 288   1              OLED_WR_Byte(0xC0,OLED_CMD);//Com scan direction
 289   1              OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 290   1              OLED_WR_Byte(0x00,OLED_CMD);//
 291   1              
 292   1              OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 293   1              OLED_WR_Byte(0x80,OLED_CMD);//
 294   1              
 295   1              OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 296   1              OLED_WR_Byte(0x05,OLED_CMD);//
 297   1              
 298   1              OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 299   1              OLED_WR_Byte(0xF1,OLED_CMD);//
 300   1              
C51 COMPILER V9.53.0.0   OLED                                                              04/16/2019 20:52:14 PAGE 6   

 301   1              OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 302   1              OLED_WR_Byte(0x12,OLED_CMD);//
 303   1              
 304   1              OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 305   1              OLED_WR_Byte(0x30,OLED_CMD);//
 306   1              
 307   1              OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 308   1              OLED_WR_Byte(0x14,OLED_CMD);//
 309   1              
 310   1              OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 311   1      }  
 312          
 313          
 314          
 315          
 316          
 317          
 318          
 319          
 320          
 321          
 322          
 323          
 324          
 325          
 326          
 327          
 328          
 329          
 330          
 331          
 332          
 333          
 334          
 335          
 336          
 337          
 338          
 339          
 340          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1311    ----
   CONSTANT SIZE    =   1846    ----
   XDATA SIZE       =   ----      38
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
